apply plugin: 'com.android.application'

def is_dev = "false"

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "io.agora.demo.streaming"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 12
        versionName "5.5"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
    }

    flavorDimensions "beauty", "dev_mode"

    productFlavors {
        std {
            // no any beauty
            dimension "beauty"
            resValue "string", "app_name", "AgoraSKDemo"
        }
        if (gradle.ext.buildWithBeauty) {
            fu {
                // NOTICE
                // if you want use beauty funtions with faceunity
                // you should set follow setting on "local.properties"
                // buildWithBeauty=true
                dimension "beauty"
                applicationIdSuffix ".withfu"
                versionNameSuffix "(withfu)"
                resValue "string", "app_name", "AgoraSK(fu)"
            }
        }
        ga {
            // General Availability
            dimension "dev_mode"

            // Get your own App ID at https://dashboard.agora.io/
            // PLEASE KEEP THIS App ID IN SAFE PLACE
            // you must give one to replace xxxxxxxxxxxx
            resValue "string", "private_app_id", xxxxxxxxxxxx

            // default rtmp pushing-url
            // you must give one like "\"xxxxx_url\""
            buildConfigField("String", "default_rtmp_url", "\"\"")
        }
    }

    buildTypes {
        debug {
            println("IS_DEV_DEBUG " + is_dev)
            buildConfigField("boolean", "IS_DEV_DEBUG", is_dev)
        }

        release {
            println("IS_DEV_DEBUG " + is_dev)
            buildConfigField("boolean", "IS_DEV_DEBUG", is_dev)
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    packagingOptions {
        doNotStrip "**/*.so"
    }
}

dependencies {
    implementation 'io.agora.rtc:full-sdk:3.2.1'

    if (gradle.ext.buildWithBeauty) {
        fuImplementation project(path: ':fulivedemo')
    }

    implementation 'io.agora:streamingkit:1.1.1'
    // bugly crash report
    implementation 'com.tencent.bugly:crashreport:3.3.6'
    implementation 'com.tencent.bugly:nativecrashreport:3.7.800'

    implementation 'com.github.yuzhiqiang1993:zxing:2.2.8'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'com.jayway.android.robotium:robotium-solo:5.6.3'
}
